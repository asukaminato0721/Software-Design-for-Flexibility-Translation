8 后记
 
  严肃的工程只有几千年的历史。我们在故意制造非常复杂的坚固系统方面的尝试，充其量是不成熟的。我们还没有收集到生物进化在过去几十亿年里所学到的经验。
我们更关心的是效率和正确性，而不是生物系统的那种稳健性，这种稳健性来自于对进化性、灵活性和抗攻击性的优化。
这对开发关键任务系统来说是明智的，这些系统几乎没有足够的资源来执行其功能。然而，微电子技术的快速发展已经缓解了大多数应用的资源问题。我们对计算和通信基础设施的日益依赖，以及对该基础设施越来越复杂的攻击的发展，使得我们必须把注意力转向稳健性。
我们并不提倡仿生学；但对生物系统的观察给了我们提示，如何将强大的稳健性原则纳入我们的工程实践。这些原则中有许多是与效率优化和证明正确性的能力的既定做法直接冲突的。
在本书中，我们故意违反了这些既定的做法，以探索优化灵活性的可能性。我们的方法的一个动机是观察到大多数经受住时间考验的系统都是作为特定领域的语言的组合而建立的，每一种语言都适合使系统的某些部分容易构建。
作为建立人工智能符号系统的努力的一部分，人工智能界顺便开发了一些技术工具，可以用来支持灵活和稳健的设计原则。例如，与其认为回溯是一种组织搜索的方法，我们可以采用它来增加复杂系统中组件的普遍适用性，该系统组织自己以满足外部施加的约束。我们相信，通过追求这种新的综合方法，我们将获得更好的硬件和软件系统。
我们在第2章开始介绍了一些普遍适用的、相当无异议的技术。我们介绍了建立组合体系统的策略--具有标准化接口的参数化部件库。这些部件可以以多种方式组合，以满足各种不同的需求。我们展示了这个想法如何被用来简化正则表达式匹配器语言的构建。我们介绍了包装器系统，该系统允许我们将部件适用于与部件构建标准不同的应用，我们用它来制作单元转换包装器的语言。我们还为一种表达棋类游戏规则的语言建立了一个规则解释器，如跳棋。
在第三章中，我们开始了一次令人兴奋和危险的冒险：我们研究了如果允许我们调制一种语言的原始程序的含义，可以做些什么。
我们扩展了算术，以处理符号表达式和函数，以及数字。我们创建了可扩展的通用程序，并使用扩展机制将前向模式的自动微分纳入我们的算术中。这种扩展是很危险的，但是如果我们小心的话，我们可以使旧的程序拥有新的能力，而又不失其旧的能力。为了使这一策略更有效、更强大，我们着手探索用户定义的类型，用可声明的子类型关系，我们用它做了一个简单但容易扩展的冒险游戏。
第四章中介绍的模式匹配和模式定向调用是建立特定领域语言的关键技术。我们从代数简化的术语重写规则开始。然后，我们展示了一种优雅的策略，将模式编译为模式匹配组合器系统中的基本模式匹配器。然后，我们扩展了我们的模式匹配工具，允许在匹配的两边有模式变量，实现了统一，然后我们用它来制作一个基本的类型推理系统。最后，我们建立了可以匹配任意图的匹配器，而不仅仅是表达式树，并使用图和图匹配以优雅的方式表达国际象棋的走法规则。
因为所有理智的计算机语言都是通用的，所以程序员没有借口说某个解决方案不能用某种语言表达。如果认真对待的话，优秀的程序员可以在任何语言中为他们所喜欢的语言做一个解释器或编译器，而他们的语言却被卡住了。这并不难，但这可能是一个程序员能做的最有力的举措。在第五章中，我们展示了如何通过解释和编译来制造越来越强大的语言。我们从一个简单的应用顺序解释器开始，用于类似Scheme的语言。为了实现可扩展性，该解释器建立在通用程序之上。然后我们对它进行了扩展，允许程序定义声明懒惰的形式参数。接下来，我们将语言编译为执行程序的组合--组合器系统。然后，我们添加了一个非确定性评价的模型，即amb运算符。最后，我们展示了如何通过暴露底层的连续性，我们可以在底层Scheme系统中安排获得amb的力量。在第6章中，我们开始探索多层计算，基于一种与通用程序密切相关的新机制。例如，我们修改了我们的算术，使一个从数字参数计算出数字结果的程序可以不加修改地扩展到计算同样的结果，并增加了单位。
结果的单位是自动从输入的单位中推导出来的，并且检查组合的单位是否一致：把5公斤加到2米会提示错误。我们用同样的分层机制来增强程序的依赖性，这样一个结果就会自动地参考制作该结果的成分的来源。
第7章的传播者模型实际上是一种思考大型系统管道的方式。虽然在本章的例子中，传播者都是简单的算术函数或关系，但这个想法要普遍得多。传播者可以是硬件或软件。它可以是一个简单的函数，也可以是一台巨大的计算机，做一个巨大的紧缩。如果它是软件，它可以用任何语言编写。事实上，一个传播器系统不一定是同质的。不同的传播者可以有不同的构造。细胞可能是专门用来容纳不同种类的信息的，它们可能以自己喜欢的方式合并信息。传播者和细胞之间的通信可以是芯片上的信号，也可以是全球网络上的信号。重要的是传播者查询单元和向单元添加信息的协议。
在这本书中，我们介绍了许多编程思想。现在就看你如何评价它们，也许还可以应用它们。
